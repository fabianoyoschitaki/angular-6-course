[update npm]
npm install -g npm

[update angular CLI]
npm uninstall -g angular-cli @angular/cli@latest (optional)
npm install @angular/cli

ng new my-dream-app
cd my-dream-app
ng serve

URL: localhost:4200 

Angular component
	template: the html code
	possible styling: css file 
	typescript file: the definition of the component, this is what will be converted to normal javascript by the build workflow
	
index.html has <app-root>

[install bootstrap locally, not globally]
	npm install --save bootstrap@3
	open angular.json and find "architect"/"build"/"styles", change it from "src/styles.css" 
	"styles": [
	  "node_modules/bootstrap/dist/css/bootstrap.min.css",
	  "src/styles.css"
	],
	save and re-run ng serve to load the new configuration
	
* Angular in the end is a JS framework, changing your DOM (html) at runtime.

[components]
	you build your whole application by composing it from a couple of components. Each component has its own template, its html code, styling and more important its own business logic. 
	we should add components to app.component.html, not to index.html
	
	Register new component in the app.module.ts, declarations array.
	
[creating new component with CLI and nesting]
	ng generate component servers (or ng g c servers)
	* spec file basically is used for testing
	
[working with component templates]
	 templateUrl: './servers.component.html', 
		single line -> template: '<app-server></app-server><app-server></app-server>'
		multiple lines -> template: `<app-server></app-server>
									 <app-server></app-server>`
									 
[working with component styles]
	@Component file, you can:
	 //styleUrls: ['./app.component.css']
	  styles: [`
		h3 {
		  color: dodgerblue;
		}
	  `]
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	